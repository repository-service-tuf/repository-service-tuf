name: Functional Tests

on:
  workflow_dispatch:
    inputs:
      api_version:
        description: "API Version"
        default: "latest"
        type: string
        required: False
      worker_version:
        description: "Worker Version"
        default: "latest"
        type: string
        required: False
      cli_version:
        description: "CLI Version"
        default: "latest"
        type: string
        required: False
  workflow_call:
    inputs:
      api_version:
        description: "API Version"
        default: "latest"
        type: string
        required: False
      worker_version:
        description: "Worker Version"
        default: "latest"
        type: string
        required: False
      cli_version:
        description: "CLI Version"
        default: "latest"
        type: string
        required: False

jobs:
  functional:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3-alpine

      redis:
        image: redis:4.0

      web-server:
        image: httpd:latest
        volumes:
          - rstuf-storage:/usr/local/apache2/htdocs
        ports:
          - 8080:80

      rstuf-worker:
        image: ghcr.io/vmware/repository-service-tuf-worker:${{ inputs.worker_version }}
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        volumes:
          - rstuf-worker-data:/data
          - rstuf-storage:/var/opt/repository-service-tuf/storage
          - rstuf-keystorage:/var/opt/repository-service-tuf/keystorage
        env:
          RSTUF_STORAGE_BACKEND: LocalStorage
          RSTUF_KEYVAULT_BACKEND: LocalKeyVault
          RSTUF_LOCAL_STORAGE_BACKEND_PATH: /var/opt/repository-service-tuf/storage
          RSTUF_LOCAL_KEYVAULT_PATH: /var/opt/repository-service-tuf/keystorage
          RSTUF_BROKER_SERVER: amqp://guest:guest@rabbitmq:5672
          RSTUF_REDIS_SERVER: redis://redis
          RSTUF_WORKER_ID: dev

      rstuf-api:
        image: ghcr.io/vmware/repository-service-tuf-api:${{ inputs.api_version }}
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 80:80
        env:
          RSTUF_BOOTSTRAP_NODE: "true"
          RSTUF_BROKER_SERVER: amqp://guest:guest@rabbitmq:5672
          RSTUF_REDIS_SERVER: redis://redis
          SECRETS_RSTUF_TOKEN_KEY: test-token-key
          SECRETS_RSTUF_ADMIN_PASSWORD: test-secret

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984

      - name: Install Python Dependencies
        run: |
          pip install pipenv
          pip install -r requirements.txt

      - name: Install the RSTUF Command Line Interface (dev)
        if: ${{ inputs.cli_version == 'dev' }}
        run: |
          git submodule update --init repository-service-tuf-cli
          git submodule foreach git pull origin main
          pip install -e repository-service-tuf-cli/

      - name: Install the RSTUF Command Line Interface (released)
        if: ${{ inputs.cli_version != 'dev' }}
        # replace the run below after repository-service-tuf is available in
        # pypi.org
        # run: |
        #   pip install "dynaconf[ini]" repository-service-tuf==${{ inputs.cli_version }}
        run: |
          git submodule update --init repository-service-tuf-cli
          git submodule foreach git pull origin v${{ inputs.api_version }}
          pip install -e repository-service-tuf-cli/


      - name: Functional Tests (BDD)
        env:
          ADMIN_SECRET_TESTS: test-secret
        # First try to check if the http://localhost responds 200 (OK)
        # Retry for 3x (waiting 30 seconds each)
        # After the retries, it tries to run Functional tests
        run: |
            retry=1; \
            while [[ ${retry} -lt 4 ]]; do \
              echo Try ${retry}/3; \
              sc=$(curl -s -o /dev/null -w "%{http_code}" http://localhost || true); \
              if [[ ${sc} -ne 200 ]]; then \
                echo Waiting RSTUF API; \
                sleep 30; \
                let 'retry+=1'; \
              else \
                break; \
              fi; \
            done
            make functional-tests

      - name: Check Tests Lint and Dependencies
        run: |
          make lint
