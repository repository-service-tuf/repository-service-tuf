{
    "openapi": "3.0.2",
    "info": {
        "title": "Repository Service for TUF API",
        "description": "Repository Service for TUF Rest API",
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/bootstrap/": {
            "get": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Check the bootstrap status. Scope: read:bootstrap",
                "description": "Check if the bootstrap of the system is done or not.",
                "operationId": "get_api_v1_bootstrap__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BootstrapGetResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "read:bootstrap"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Bootstrap the system with initial signed Metadata. Scope: write:bootstrap",
                "description": "Initialize the TUF Repository with initial signed Metadata and Settings.",
                "operationId": "post_api_v1_bootstrap__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BootstrapPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BootstrapPostResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "write:bootstrap"
                        ]
                    }
                ]
            }
        },
        "/api/v1/token/": {
            "get": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Get token details. Scope: read:token",
                "description": "Return the token details. It requires an authenticated token with scope authorization.",
                "operationId": "get_api_v1_token__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "read:token"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "title": "Token",
                            "description": "Token to be validated",
                            "required": true,
                            "type": "string"
                        },
                        "description": "Token to be validated"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTokenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Issue token user/password authentication",
                "description": "Issue a token with scopes for all granted user scope.",
                "operationId": "post_api_v1_token__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_post_api_v1_token__post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostTokenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/token/new/": {
            "post": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Issue token from authenticated token. Scope: write:token",
                "description": "Issue token from a valid and existent token.",
                "operationId": "post_token_api_v1_token_new__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostTokenResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "write:token"
                        ]
                    }
                ]
            }
        },
        "/api/v1/config/": {
            "get": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "List settings. Scope: read:settings",
                "description": "Returns the configuration settings",
                "operationId": "get_api_v1_config__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repository_service_tuf_api__config__Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "read:settings"
                        ]
                    }
                ]
            }
        },
        "/api/v1/targets/": {
            "post": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Add targets files to Metadata. Scope: write:targets",
                "description": "Add targets files to Metadata.",
                "operationId": "post_api_v1_targets__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repository_service_tuf_api__targets__Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "write:targets"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Remove targets files from Metadata. Scope: delete:targets",
                "description": "Remove targets files from Metadata.",
                "operationId": "delete_api_v1_targets__delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeletePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repository_service_tuf_api__targets__Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "delete:targets"
                        ]
                    }
                ]
            }
        },
        "/api/v1/targets/publish/": {
            "post": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Submit a task to publish targets.Scope: write:targets",
                "description": "Trigger a task to publish targets not yet published from the RSTUF Database",
                "operationId": "post_publish_targets_api_v1_targets_publish__post",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repository_service_tuf_api__targets__Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "write:targets"
                        ]
                    }
                ]
            }
        },
        "/api/v1/task/": {
            "get": {
                "tags": [
                    "v1",
                    "v1"
                ],
                "summary": "Get task state. Scope: read:tasks",
                "description": "Get Repository Metadata task state. The state is according with Celery tasks: `PENDING` the task still not processed or unknown/inexistent task. `RECEIVED` task is reveived by the broker server. `PRE_RUN` the task will start by repository-service-tuf-worker. `RUNNING` the task is in execution. `FAILURE` the task failed to executed. `SUCCESS` the task execution is finished.",
                "operationId": "get_api_v1_task__get",
                "security": [
                    {
                        "OAuth2PasswordBearer": [
                            "read:tasks"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "title": "Task Id",
                            "description": "Task id",
                            "required": true,
                            "type": "string"
                        },
                        "description": "Task id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repository_service_tuf_api__tasks__Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddPayload": {
                "title": "AddPayload",
                "required": [
                    "targets"
                ],
                "type": "object",
                "properties": {
                    "targets": {
                        "title": "Targets",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Targets"
                        }
                    },
                    "add_task_id_to_custom": {
                        "title": "Add Task Id To Custom",
                        "type": "boolean",
                        "description": "Whether to add the id of the task in custom",
                        "default": false
                    },
                    "publish_targets": {
                        "title": "Publish Targets",
                        "type": "boolean",
                        "description": "Whether to publish the targets",
                        "default": true
                    }
                },
                "description": "POST method required Payload.",
                "example": {
                    "targets": [
                        {
                            "info": {
                                "length": 11342,
                                "hashes": {
                                    "blake2b-256": "716f6e863f744b9ac22c97ec7b76ea5f5908bc5b2f67c61510bfc4751384ea7a"
                                },
                                "custom": {
                                    "key": "value"
                                }
                            },
                            "path": "file1.tar.gz"
                        },
                        {
                            "info": {
                                "length": 630,
                                "hashes": {
                                    "blake2b-256": "69217a3079908094e11121d042354a7c1f55b6482ca1a51e1b250dfd1ed0eef9"
                                }
                            },
                            "path": "file2.tar.gz"
                        }
                    ]
                }
            },
            "Body_post_api_v1_token__post": {
                "title": "Body_post_api_v1_token__post",
                "required": [
                    "username",
                    "password",
                    "scope"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string",
                        "format": "password",
                        "writeOnly": true
                    },
                    "scope": {
                        "title": "Scope",
                        "type": "string",
                        "description": "Add scopes separeted by space. Available scopes: `read:bootstrap`, `read:settings`, `read:tasks`, `read:token`, `write:bootstrap`, `write:targets`, `write:token`, `delete:targets`"
                    },
                    "expires": {
                        "title": "Expires",
                        "minimum": 1.0,
                        "type": "integer",
                        "description": "Expiration in hours. Default: 1 hour",
                        "default": 1
                    }
                }
            },
            "BootstrapGetResponse": {
                "title": "BootstrapGetResponse",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/GetData"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "example": {
                    "data": {
                        "bootstrap": false
                    },
                    "message": "System available for bootstrap."
                }
            },
            "BootstrapPayload": {
                "title": "BootstrapPayload",
                "required": [
                    "settings",
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/Settings"
                    },
                    "metadata": {
                        "title": "Metadata",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFMetadata"
                        }
                    }
                },
                "example": {
                    "settings": {
                        "expiration": {
                            "root": 365,
                            "targets": 365,
                            "snapshot": 1,
                            "timestamp": 1,
                            "bins": 1
                        },
                        "services": {
                            "targets_base_url": "http://www.example.com/repository/",
                            "number_of_delegated_bins": 4,
                            "targets_online_key": true
                        }
                    },
                    "metadata": {
                        "1.targets": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "8a9bf7b74fd4e42a3a7cdb05e8b3452acd3f0162c20ed3c4a0c6ae689f8afcbf98b224efce3ff3e40acf4f022df4f56df838976baafc0c3385420c3471ab8108"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 2,
                                "spec_version": "1.0.30",
                                "expires": "2024-02-17T10:55:28Z",
                                "targets": {},
                                "delegations": {
                                    "keys": {
                                        "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8": {
                                            "keytype": "ed25519",
                                            "scheme": "ed25519",
                                            "keyval": {
                                                "public": "9fe7ddccb75b977a041424a1fdc142e01be4abab918dc4c611fbfe4a3360a9a8"
                                            }
                                        }
                                    },
                                    "succinct_roles": {
                                        "bit_length": 4,
                                        "name_prefix": "bins",
                                        "keyids": [
                                            "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8"
                                        ],
                                        "threshold": 1
                                    }
                                }
                            }
                        },
                        "1.snapshot": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "605c9cb611d8ae7c748a439d3e5af2759e4233b1081f19660964694569d057f20209d7fa616db165304e24970ff40495c66a0ab768bc230e0ccb343e7a68bf0c"
                                }
                            ],
                            "signed": {
                                "_type": "snapshot",
                                "version": 2,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "meta": {
                                    "targets.json": {
                                        "version": 2
                                    },
                                    "bins-0.json": {
                                        "version": 1
                                    },
                                    "bins-1.json": {
                                        "version": 1
                                    },
                                    "bins-2.json": {
                                        "version": 1
                                    },
                                    "bins-3.json": {
                                        "version": 1
                                    },
                                    "bins-4.json": {
                                        "version": 1
                                    },
                                    "bins-5.json": {
                                        "version": 1
                                    },
                                    "bins-6.json": {
                                        "version": 1
                                    },
                                    "bins-7.json": {
                                        "version": 1
                                    },
                                    "bins-8.json": {
                                        "version": 1
                                    },
                                    "bins-9.json": {
                                        "version": 1
                                    },
                                    "bins-a.json": {
                                        "version": 1
                                    },
                                    "bins-b.json": {
                                        "version": 1
                                    },
                                    "bins-c.json": {
                                        "version": 1
                                    },
                                    "bins-d.json": {
                                        "version": 1
                                    },
                                    "bins-e.json": {
                                        "version": 1
                                    },
                                    "bins-f.json": {
                                        "version": 1
                                    }
                                }
                            }
                        },
                        "timestamp": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "79ce1ae7c0bcaac851531d8140d7b3f254f54d4242ee3b7e05cd7d8e2eaf9c1c8e18aeb21c1d70e731371aaf3f92bcc41764f6227d12534ff65cfdf09a1fd606"
                                }
                            ],
                            "signed": {
                                "_type": "timestamp",
                                "version": 2,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "meta": {
                                    "snapshot.json": {
                                        "version": 2
                                    }
                                }
                            }
                        },
                        "1.root": {
                            "signatures": [
                                {
                                    "keyid": "1cebe343e35f0213f6136758e6c3a8f8e1f9eeb7e47a07d5cb336462ed31dcb7",
                                    "sig": "b3c81b6579442b8672ff460ac36cdb51064109fcfa93f0e72dabbf338f7d0c24e1a91d3696d72d81f60e94b2782ab1bf41e6b8f3e535538216f4379bf30a4302"
                                },
                                {
                                    "keyid": "800dfb5a1982b82b7893e58035e19f414f553fc08cbb1130cfbae302a7b7fee5",
                                    "sig": "fdfbb1877da404504e8b9c111d87680df5291094dafa01f66bfe6031e470d7c63cc477c1e79210a89e27734758e54fb54adc529918b1211d9dd9971c8bb26c0a"
                                }
                            ],
                            "signed": {
                                "_type": "root",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2024-02-17T10:55:28Z",
                                "consistent_snapshot": true,
                                "keys": {
                                    "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8": {
                                        "keytype": "ed25519",
                                        "scheme": "ed25519",
                                        "keyval": {
                                            "public": "9fe7ddccb75b977a041424a1fdc142e01be4abab918dc4c611fbfe4a3360a9a8"
                                        }
                                    },
                                    "1cebe343e35f0213f6136758e6c3a8f8e1f9eeb7e47a07d5cb336462ed31dcb7": {
                                        "keytype": "ed25519",
                                        "scheme": "ed25519",
                                        "keyval": {
                                            "public": "ad1709b3cb419b99c5cd7427d6411522e5a93aec6767453e91af921a73d22a3c"
                                        }
                                    },
                                    "800dfb5a1982b82b7893e58035e19f414f553fc08cbb1130cfbae302a7b7fee5": {
                                        "keytype": "ed25519",
                                        "scheme": "ed25519",
                                        "keyval": {
                                            "public": "7098f769f6ab8502b50f3b58686b8a042d5d3bb75d8b3a48a2fcbc15a0223501"
                                        }
                                    }
                                },
                                "roles": {
                                    "snapshot": {
                                        "keyids": [
                                            "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8"
                                        ],
                                        "threshold": 1
                                    },
                                    "timestamp": {
                                        "keyids": [
                                            "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8"
                                        ],
                                        "threshold": 1
                                    },
                                    "targets": {
                                        "keyids": [
                                            "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8"
                                        ],
                                        "threshold": 1
                                    },
                                    "root": {
                                        "keyids": [
                                            "1cebe343e35f0213f6136758e6c3a8f8e1f9eeb7e47a07d5cb336462ed31dcb7",
                                            "800dfb5a1982b82b7893e58035e19f414f553fc08cbb1130cfbae302a7b7fee5"
                                        ],
                                        "threshold": 1
                                    }
                                }
                            }
                        },
                        "1.bins-0": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-1": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-2": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-3": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-4": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-5": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-6": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-7": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-8": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-9": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-a": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-b": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-c": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-d": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-e": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "1.bins-f": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "2621340771447a7d6de0dea4c42fcc1ecd95171b9720cb64307e37108841c04cdd836b0b3723cf18129f574458f3be037690010ec7259eaf79f4ed7b2427b304"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 1,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "targets": {}
                            }
                        },
                        "2.targets": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "8a9bf7b74fd4e42a3a7cdb05e8b3452acd3f0162c20ed3c4a0c6ae689f8afcbf98b224efce3ff3e40acf4f022df4f56df838976baafc0c3385420c3471ab8108"
                                }
                            ],
                            "signed": {
                                "_type": "targets",
                                "version": 2,
                                "spec_version": "1.0.30",
                                "expires": "2024-02-17T10:55:28Z",
                                "targets": {},
                                "delegations": {
                                    "keys": {
                                        "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8": {
                                            "keytype": "ed25519",
                                            "scheme": "ed25519",
                                            "keyval": {
                                                "public": "9fe7ddccb75b977a041424a1fdc142e01be4abab918dc4c611fbfe4a3360a9a8"
                                            }
                                        }
                                    },
                                    "succinct_roles": {
                                        "bit_length": 4,
                                        "name_prefix": "bins",
                                        "keyids": [
                                            "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8"
                                        ],
                                        "threshold": 1
                                    }
                                }
                            }
                        },
                        "2.snapshot": {
                            "signatures": [
                                {
                                    "keyid": "f7a6872f297634219a80141caa2ec9ae8802098b07b67963272603e36cc19fd8",
                                    "sig": "605c9cb611d8ae7c748a439d3e5af2759e4233b1081f19660964694569d057f20209d7fa616db165304e24970ff40495c66a0ab768bc230e0ccb343e7a68bf0c"
                                }
                            ],
                            "signed": {
                                "_type": "snapshot",
                                "version": 2,
                                "spec_version": "1.0.30",
                                "expires": "2023-02-18T10:55:28Z",
                                "meta": {
                                    "targets.json": {
                                        "version": 2
                                    },
                                    "bins-0.json": {
                                        "version": 1
                                    },
                                    "bins-1.json": {
                                        "version": 1
                                    },
                                    "bins-2.json": {
                                        "version": 1
                                    },
                                    "bins-3.json": {
                                        "version": 1
                                    },
                                    "bins-4.json": {
                                        "version": 1
                                    },
                                    "bins-5.json": {
                                        "version": 1
                                    },
                                    "bins-6.json": {
                                        "version": 1
                                    },
                                    "bins-7.json": {
                                        "version": 1
                                    },
                                    "bins-8.json": {
                                        "version": 1
                                    },
                                    "bins-9.json": {
                                        "version": 1
                                    },
                                    "bins-a.json": {
                                        "version": 1
                                    },
                                    "bins-b.json": {
                                        "version": 1
                                    },
                                    "bins-c.json": {
                                        "version": 1
                                    },
                                    "bins-d.json": {
                                        "version": 1
                                    },
                                    "bins-e.json": {
                                        "version": 1
                                    },
                                    "bins-f.json": {
                                        "version": 1
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "BootstrapPostResponse": {
                "title": "BootstrapPostResponse",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/PostData"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "example": {
                    "data": {
                        "task_id": "7a634b556f784ae88785d36425f9a218"
                    },
                    "message": "Bootstrap accepted."
                }
            },
            "DeletePayload": {
                "title": "DeletePayload",
                "required": [
                    "targets"
                ],
                "type": "object",
                "properties": {
                    "targets": {
                        "title": "Targets",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publish_targets": {
                        "title": "Publish Targets",
                        "type": "boolean",
                        "description": "Whether to publish the targets changes",
                        "default": true
                    }
                },
                "description": "DELETE method required Payload.",
                "example": {
                    "targets": [
                        "v3.4.1/file-3.4.1.tar.gz",
                        "config-3.4.1.yaml",
                        "file1.tar.gz"
                    ]
                }
            },
            "GetData": {
                "title": "GetData",
                "required": [
                    "bootstrap"
                ],
                "type": "object",
                "properties": {
                    "bootstrap": {
                        "title": "Bootstrap",
                        "type": "boolean"
                    }
                }
            },
            "GetTokenResponse": {
                "title": "GetTokenResponse",
                "required": [
                    "data",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TokenPublicData"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "example": {
                    "data": {
                        "scopes": [
                            "read:bootstrap",
                            "read:settings",
                            "read:tasks",
                            "read:token",
                            "write:bootstrap",
                            "write:targets",
                            "write:token",
                            "delete:targets"
                        ],
                        "expired": false,
                        "expiration": "2022-08-19T17:29:39"
                    },
                    "message": "Token information"
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "PayloadTargetsHashes": {
                "title": "PayloadTargetsHashes",
                "required": [
                    "blake2b-256"
                ],
                "type": "object",
                "properties": {
                    "blake2b-256": {
                        "title": "Blake2B-256",
                        "type": "string"
                    }
                }
            },
            "PostData": {
                "title": "PostData",
                "type": "object",
                "properties": {
                    "task_id": {
                        "title": "Task Id",
                        "type": "string"
                    }
                }
            },
            "PostTokenResponse": {
                "title": "PostTokenResponse",
                "required": [
                    "access_token"
                ],
                "type": "object",
                "properties": {
                    "access_token": {
                        "title": "Access Token",
                        "type": "string"
                    }
                },
                "example": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJz...fhpp0"
                }
            },
            "ResponseData": {
                "title": "ResponseData",
                "required": [
                    "targets",
                    "task_id",
                    "last_update"
                ],
                "type": "object",
                "properties": {
                    "targets": {
                        "title": "Targets",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "task_id": {
                        "title": "Task Id",
                        "type": "string"
                    },
                    "last_update": {
                        "title": "Last Update",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServiceSettings": {
                "title": "ServiceSettings",
                "required": [
                    "targets_base_url",
                    "number_of_delegated_bins",
                    "targets_online_key"
                ],
                "type": "object",
                "properties": {
                    "targets_base_url": {
                        "title": "Targets Base Url",
                        "type": "string"
                    },
                    "number_of_delegated_bins": {
                        "title": "Number Of Delegated Bins",
                        "exclusiveMaximum": 16385.0,
                        "exclusiveMinimum": 1.0,
                        "type": "integer"
                    },
                    "targets_online_key": {
                        "title": "Targets Online Key",
                        "type": "boolean"
                    }
                }
            },
            "Settings": {
                "title": "Settings",
                "required": [
                    "expiration",
                    "services"
                ],
                "type": "object",
                "properties": {
                    "expiration": {
                        "title": "Expiration",
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    },
                    "services": {
                        "$ref": "#/components/schemas/ServiceSettings"
                    }
                }
            },
            "TUFKeys": {
                "title": "TUFKeys",
                "required": [
                    "keytype",
                    "scheme",
                    "keyval"
                ],
                "type": "object",
                "properties": {
                    "keytype": {
                        "title": "Keytype",
                        "type": "string"
                    },
                    "scheme": {
                        "title": "Scheme",
                        "type": "string"
                    },
                    "keyval": {
                        "title": "Keyval",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "TUFMetadata": {
                "title": "TUFMetadata",
                "required": [
                    "signatures",
                    "signed"
                ],
                "type": "object",
                "properties": {
                    "signatures": {
                        "title": "Signatures",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TUFSignatures"
                        }
                    },
                    "signed": {
                        "$ref": "#/components/schemas/TUFSigned"
                    }
                }
            },
            "TUFSignatures": {
                "title": "TUFSignatures",
                "required": [
                    "keyid",
                    "sig"
                ],
                "type": "object",
                "properties": {
                    "keyid": {
                        "title": "Keyid",
                        "type": "string"
                    },
                    "sig": {
                        "title": "Sig",
                        "type": "string"
                    }
                }
            },
            "TUFSigned": {
                "title": "TUFSigned",
                "required": [
                    "_type",
                    "version",
                    "spec_version",
                    "expires"
                ],
                "type": "object",
                "properties": {
                    "_type": {
                        "title": " Type",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    },
                    "spec_version": {
                        "title": "Spec Version",
                        "type": "string"
                    },
                    "expires": {
                        "title": "Expires",
                        "type": "string"
                    },
                    "keys": {
                        "title": "Keys",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFKeys"
                        }
                    },
                    "consistent_snapshot": {
                        "title": "Consistent Snapshot",
                        "type": "boolean"
                    },
                    "roles": {
                        "title": "Roles",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFSignedRoles"
                        }
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFSignedMetaFile"
                        }
                    },
                    "targets": {
                        "title": "Targets",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "delegations": {
                        "$ref": "#/components/schemas/TUFSignedDelegations"
                    }
                }
            },
            "TUFSignedDelegations": {
                "title": "TUFSignedDelegations",
                "required": [
                    "keys"
                ],
                "type": "object",
                "properties": {
                    "keys": {
                        "title": "Keys",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFKeys"
                        }
                    },
                    "roles": {
                        "title": "Roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TUFSignedDelegationsRoles"
                        }
                    },
                    "succinct_roles": {
                        "$ref": "#/components/schemas/TUFSignedDelegationsSuccinctRoles"
                    }
                }
            },
            "TUFSignedDelegationsRoles": {
                "title": "TUFSignedDelegationsRoles",
                "required": [
                    "name",
                    "terminating",
                    "keyids",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "terminating": {
                        "title": "Terminating",
                        "type": "boolean"
                    },
                    "keyids": {
                        "title": "Keyids",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "threshold": {
                        "title": "Threshold",
                        "type": "integer"
                    },
                    "paths": {
                        "title": "Paths",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "path_hash_prefixes": {
                        "title": "Path Hash Prefixes",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TUFSignedDelegationsSuccinctRoles": {
                "title": "TUFSignedDelegationsSuccinctRoles",
                "required": [
                    "bit_length",
                    "name_prefix",
                    "keyids",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "bit_length": {
                        "title": "Bit Length",
                        "exclusiveMaximum": 15.0,
                        "exclusiveMinimum": 0.0,
                        "type": "integer"
                    },
                    "name_prefix": {
                        "title": "Name Prefix",
                        "type": "string"
                    },
                    "keyids": {
                        "title": "Keyids",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "threshold": {
                        "title": "Threshold",
                        "type": "integer"
                    }
                }
            },
            "TUFSignedMetaFile": {
                "title": "TUFSignedMetaFile",
                "required": [
                    "version"
                ],
                "type": "object",
                "properties": {
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    }
                }
            },
            "TUFSignedRoles": {
                "title": "TUFSignedRoles",
                "required": [
                    "keyids",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "keyids": {
                        "title": "Keyids",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "threshold": {
                        "title": "Threshold",
                        "type": "integer"
                    }
                }
            },
            "Targets": {
                "title": "Targets",
                "required": [
                    "info",
                    "path"
                ],
                "type": "object",
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/TargetsInfo"
                    },
                    "path": {
                        "title": "Path",
                        "type": "string"
                    }
                }
            },
            "TargetsInfo": {
                "title": "TargetsInfo",
                "required": [
                    "length",
                    "hashes"
                ],
                "type": "object",
                "properties": {
                    "length": {
                        "title": "Length",
                        "type": "integer"
                    },
                    "hashes": {
                        "$ref": "#/components/schemas/PayloadTargetsHashes"
                    },
                    "custom": {
                        "title": "Custom",
                        "type": "object"
                    }
                }
            },
            "TasksData": {
                "title": "TasksData",
                "required": [
                    "task_id",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "task_id": {
                        "title": "Task Id",
                        "type": "string",
                        "description": "Task ID"
                    },
                    "state": {
                        "title": "State",
                        "type": "string",
                        "description": "State according with Celery Tasks"
                    },
                    "result": {
                        "title": "Result",
                        "description": "Details about the task execution."
                    }
                }
            },
            "TokenPublicData": {
                "title": "TokenPublicData",
                "required": [
                    "expired"
                ],
                "type": "object",
                "properties": {
                    "scopes": {
                        "title": "Scopes",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expired": {
                        "title": "Expired",
                        "type": "boolean"
                    },
                    "expiration": {
                        "title": "Expiration",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TokenRequestPayload": {
                "title": "TokenRequestPayload",
                "required": [
                    "scopes",
                    "expires"
                ],
                "type": "object",
                "properties": {
                    "scopes": {
                        "title": "Scopes",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "enum": [
                                "read:bootstrap",
                                "read:settings",
                                "read:tasks",
                                "read:token",
                                "write:targets",
                                "delete:targets"
                            ],
                            "type": "string"
                        }
                    },
                    "expires": {
                        "title": "Expires",
                        "minimum": 1.0,
                        "type": "integer",
                        "description": "In hour(s)"
                    }
                },
                "example": {
                    "scopes": [
                        "read:token",
                        "read:settings"
                    ],
                    "expires": 24
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "repository_service_tuf_api__config__Response": {
                "title": "Response",
                "required": [
                    "data",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "title": "Data",
                        "type": "object"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "example": {
                    "data": {
                        "bootstrap": "302c84ea28fd4e38ae41d147f128a232",
                        "bins_expiration": 1,
                        "bins_number_prefixes": 4,
                        "bins_num_keys": 1,
                        "bins_threshold": 1,
                        "bin_expiration": 365,
                        "bin_num_keys": 1,
                        "bin_threshold": 1,
                        "root_expiration": 356,
                        "root_num_keys": 2,
                        "root_threshold": 1,
                        "snapshot_expiration": 1,
                        "snapshot_num_keys": 1,
                        "snapshot_threshold": 1,
                        "targets_base_url": "http://www.example.com/repository/",
                        "targets_expiration": 365,
                        "targets_num_keys": 2,
                        "targets_paths": [
                            "*",
                            "*/*"
                        ],
                        "targets_threshold": 1,
                        "timestamp_expiration": 1,
                        "timestamp_num_keys": 1,
                        "timestamp_threshold": 1
                    },
                    "message": "Current Settings"
                }
            },
            "repository_service_tuf_api__targets__Response": {
                "title": "Response",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResponseData"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "description": "Targets Response",
                "example": {
                    "data": {
                        "targets": [
                            "file1.tar.gz",
                            "file2.tar.gz"
                        ],
                        "task_id": "06ee6db3cbab4b26be505352c2f2e2c3",
                        "last_update": "2022-12-01T12:10:00.578086"
                    },
                    "message": "New Target(s) successfully submitted."
                }
            },
            "repository_service_tuf_api__tasks__Response": {
                "title": "Response",
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TasksData"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "example": {
                    "data": {
                        "task_id": "91353735ef7d48099df86d8bfa30316e",
                        "state": "SUCCESS",
                        "result": {
                            "status": "Task finished.",
                            "details": {
                                "key": "value"
                            }
                        }
                    },
                    "message": "Task state."
                }
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {
                            "read:bootstrap": "Read (GET) bootstrap",
                            "read:settings": "Read (GET) settings",
                            "read:tasks": "Read (GET) tasks",
                            "read:token": "Read (GET) tokens",
                            "write:targets": "Write (POST) targets",
                            "write:token": "Write (POST) token",
                            "write:bootstrap": "Write (POST) bootstrap",
                            "delete:targets": "Delete (DELETE) targets"
                        },
                        "tokenUrl": "/api/v1/token"
                    }
                }
            }
        }
    }
}