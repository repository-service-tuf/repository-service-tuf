volumes:
  repository-service-tuf-storage:
  repository-service-tuf-keyvault:
  repository-service-tuf-api-data:
  repository-service-tuf-redis-data:
  repository-service-tuf-pgsql-data:
services:
  postgres:
    image: postgres:17.5-alpine3.21
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - "repository-service-tuf-pgsql-data:/var/lib/postgresql/data"
      - "./db-init:/docker-entrypoint-initdb.d:ro"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 1s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    secrets:
      - postgres_password

  repository-service-tuf-api:
    image: ghcr.io/repository-service-tuf/repository-service-tuf-api:${API_VERSION}
    volumes:
      - repository-service-tuf-api-data:/data:rw
    ports:
      - 80:80
    environment:
      - RSTUF_BROKER_SERVER=redis://redis
      - RSTUF_REDIS_SERVER=redis://redis
    depends_on:
      redis:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  web:
    image: python:3.13-slim
    command: python -m http.server -d /var/opt/repository-service-tuf/storage 8080
    volumes:
      - repository-service-tuf-storage:/var/opt/repository-service-tuf/storage:ro
    ports:
      - "8080:8080"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  redis:
    image: redis:8.0.0-alpine3.21
    volumes:
      - repository-service-tuf-redis-data:/data:rw
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/redis

  repository-service-tuf-worker:
    image: ghcr.io/repository-service-tuf/repository-service-tuf-worker:${WORKER_VERSION}
    environment:
      - RSTUF_STORAGE_BACKEND=LocalStorage
      - RSTUF_LOCAL_STORAGE_BACKEND_PATH=/var/opt/repository-service-tuf/storage
      - RSTUF_ONLINE_KEY_DIR=/var/opt/repository-service-tuf/key_storage
      - RSTUF_BROKER_SERVER=redis://redis
      - RSTUF_REDIS_SERVER=redis://redis
      - RSTUF_DB_SERVER=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432
    volumes:
      - repository-service-tuf-storage:/var/opt/repository-service-tuf/storage:rw
      - ./tests/files/key_storage/:/var/opt/repository-service-tuf/key_storage:ro
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  rstuf-ft-runner:
    image: python:3.13-slim
    command: python -V
    working_dir: /rstuf-runner
    volumes:
      - ./:/rstuf-runner:ro
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
